<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http security="none" pattern="/login.jsp"/>
    <http security="none" pattern="/loginFailure.jsp"/>
    <http entry-point-ref="loginEntryPoint">
        <!-- 替换默认的LogoutFilter -->
        <custom-filter ref="customLogoutFilter" position="LOGOUT_FILTER"/>
        <!-- 替换默认的LoginFilter -->
        <custom-filter ref="customLoginFilter" position="FORM_LOGIN_FILTER"/>
        <intercept-url pattern="/admin" access="ROLE_USER"/>
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user name="user" password="user" authorities="ROLE_USER"/>
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
            </user-service>
        </authentication-provider>
        <!-- 加入开发人员自定义的Provider -->
        <authentication-provider ref="customProvider"/>
    </authentication-manager>

    <beans:bean id="customProvider"
                class="com.spring.security.deng.CustomAuthenticationProvider"/>

    <beans:bean id="loginEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <!-- 默认登录页的url -->
        <beans:constructor-arg value="/login.jsp"/>
    </beans:bean>

    <beans:bean id="customLoginFilter" class="com.spring.security.deng.CustomLoginFilter">
        <!-- 校验登录是否有效的虚拟url -->
        <beans:property name="filterProcessesUrl" value="/login.do"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="passwordParameter" value="password"/>
        <beans:property name="authenticationSuccessHandler">
            <!-- 自定义登录成功后的处理handler -->
            <beans:bean class="com.spring.security.deng.CustomLoginHandler">
                <!-- 登录成功后的默认url -->
                <beans:property name="defaultTargetUrl" value="/loginSuccess.jsp"/>
            </beans:bean>
        </beans:property>
        <beans:property name="authenticationFailureHandler" ref="authFailure">
            <!--<beans:bean
                    class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                &lt;!&ndash; 登录失败后的默认Url &ndash;&gt;
                <beans:property name="defaultFailureUrl" value="/login?error"/>
            </beans:bean>-->
        </beans:property>
    </beans:bean>

    <beans:bean id="customLogoutFilter" class="com.spring.security.deng.CustomLogoutFilter">
        <!-- 处理退出的虚拟url -->
        <beans:property name="filterProcessesUrl" value="/logout"/>
        <!-- 退出处理成功后的默认显示url -->
        <beans:constructor-arg index="0" value="/login?logout"/>
        <beans:constructor-arg index="1">
            <!-- 退出成功后的handler列表 -->
            <beans:array>
                <beans:bean id="securityContextLogoutHandler"
                            class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
                <!-- 加入了开发人员自定义的退出成功处理 -->
                <beans:bean id="customLogoutSuccessHandler" class="com.spring.security.deng.CustomLogoutHandler"/>
            </beans:array>
        </beans:constructor-arg>
    </beans:bean>

    <!--授权失败-->
    <beans:bean id="authFailure" class="com.spring.security.AuthenticationFailureHandlerImpl"/>

</beans:beans>